{"version":3,"sources":["addcircle.png","ClassifyUrl.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ClassifyUrl","props","_this","Object","classCallCheck","this","console","log","possibleConstructorReturn","getPrototypeOf","call","state","overlayActive","overlaySpinnerActive","overlayText","getApiUrl","classifyImg","enableClassify","handleClick","bind","assertThisInitialized","handleClassify","toggleOverlay","doPostCallback","doGetCallback","data","animal","computer","mickey","predictions","_this2","setState","_this3","toggleSpinner","uploaded","_this4","fetch","method","body","imgBlob","then","res","json","obj","exampleMapping","catch","error","message","_this5","params","encodeURIComponent","axios","get","response","react_default","a","createElement","LoadingOverlay_default","active","spinner","text","onClick","className","src","alt","Link","to","disabled","Component","app_name","VerifyUrl","x","addcircle","imgSrc","displayImg","enableNext","imgSrcClean","onError","handleError","onLoad","type","value","imgSrcRaw","onChange","handleChange","placeholder","Home","imgId","file","document","getElementById","files","reader","FileReader","that","onloadend","bubble","result","history","push","readAsDataURL","id","accept","click","App","verifyImgUrl","verifyImg","validImg","name","val","event","target","_this6","BrowserRouter","basename","process","Route","path","exact","render","App_Home","assign","App_VerifyUrl","src_ClassifyUrl","handleSubmit","Boolean","window","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.660a3abf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/addcircle.259374c6.png\";","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport axios from 'axios';\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass ClassifyUrl extends Component {\n  constructor(props){\n    console.log(\"ccc props\", props);\n    super(props);\n    this.state = { \n      overlayActive: false,\n      overlaySpinnerActive: false,\n      overlayText:\"Loading..\",\n      getApiUrl: props.getApiUrl || 'https://dsm.just-minimalism.com/classify-url',\n      classifyImg: props.classifyImg,\n      enableClassify: true,\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClassify = this.handleClassify.bind(this);\n    this.toggleOverlay = this.toggleOverlay.bind(this);\n    this.doPostCallback = this.doPostCallback.bind(this);\n    this.doGetCallback = this.doGetCallback.bind(this);\n  }\n\n  exampleMapping(data){\n    const dict = {\n      animal: \"This is an animal mouse!\",\n      computer: \"This is a computer mouse!\",\n      mickey: \"This is mickey mouse\",\n    }\n    return dict[data.predictions[0][0]];\n  }\n\n  handleClick(){\n    this.toggleOverlay();\n  }\n\n  toggleOverlay(){\n    this.setState(state => ({\n        overlayActive: !this.state.overlayActive\n      })\n    );\n  }\n\n  toggleSpinner(){\n    this.setState(state => ({\n        overlaySpinnerActive: !this.state.overlaySpinnerActive\n      })\n    );\n  }\n\n  handleClassify(){\n    this.toggleOverlay();\n    this.toggleSpinner();\n    this.setState({ overlayText: 'Loading..'});\n\n    if(this.props.uploaded){\n      this.doPostCallback();\n    } else {\n      this.doGetCallback();\n    }\n\t}\n\n \tdoPostCallback(){\n    //const base = 'https://dsm.just-minimalism.com/classify-url';\n    const base = 'http://138.197.227.42/classify-url';\n\t\t\tfetch(base, {\n\t\t\t  method: \"POST\",\n\t\t\t  body: this.props.imgBlob\n\t\t\t}).then(res => {\n        console.log(\"inside the yes\", res);\n\t\t\t\treturn res.json().then(obj=> {\n          console.log(\"inside the object parse\", obj);\n          this.setState({ \n            overlayText: this.exampleMapping(obj),\n            enableClassify: false\n          });\n          this.toggleSpinner();\n\t\t\t\t})\n      }).catch(error => {\n        console.log(\"THEE CATCH\", error);\n          this.setState({ \n            overlayText: error.message,\n            enableClassify: true\n          });\n          this.toggleSpinner();\n      });\n\t\t}\n  \n\n  doGetCallback(){\n    const base = 'https://dsm.just-minimalism.com/classify-url';\n    //const base = 'http://138.197.227.42/classify-url';\n    const params = '?url=' + encodeURIComponent(this.state.classifyImg);\n    axios.get(base + params)\n      .then((response) => {\n          console.log('ABOUT TO SET STATE', response);\n          this.setState({ \n            overlayText: this.exampleMapping(response.data),\n            enableClassify: false\n          });\n          this.toggleSpinner();\n        }\n      )\n  }\n\n  render() {\n    return (\n      <LoadingOverlay\n        active={this.state.overlayActive}\n        spinner={this.state.overlaySpinnerActive}\n        text={this.state.overlayText}\n        onClick={this.handleClick}\n      >\n        <div className=\"App-header\">\n          <div className=\"App-page\">\n            <img src={this.props.classifyImg} className=\"App-preview-img\" alt=\"\"/>\n            <Link className=\"App-button-link\" to=\"/classify\" >\n              <button className=\"App-button\" onClick={this.handleClassify} disabled={!this.state.enableClassify}>\n                Classify..\n              </button>\n            </Link>\n            <Link to=\"/\" className=\"App-back-link\">Back</Link>\n          </div>\n        </div>\n      </LoadingOverlay>\n    )\n  }\n}\n\nexport default ClassifyUrl\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport './App.css';\n\n\nimport addcircle from './addcircle.png';\n\n\nimport { name as app_name } from '../package.json';\n\nimport ClassifyUrl from './ClassifyUrl'\n\n\nconsole.log(\"Name is \", app_name);\n\n\nclass VerifyUrl extends Component {\n  constructor(props){\n    super(props);\n    console.log(\"we are in the component\");\n    this.state = { \n      x : addcircle,\n      imgSrc : '',\n      displayImg: false,\n      enableNext: false\n    }\n\n  }\n\n  render() {\n    console.log(\"IN VERIFY RENDER WITH\", this.props);\n    return (\n      <div className=\"App-header\">\n        <div className=\"App-page\">\n          <img src={this.props.imgSrcClean} className=\"App-preview-img\"  onError={this.props.handleError} onLoad={()=> this.setState({enableNext:true})} alt=\"\"/> \n          <input type=\"text\" value={this.props.imgSrcRaw} className=\"App-text-input\" onChange={this.props.handleChange} placeholder=\"Paste a URL\"/>\n          <Link className=\"App-button-link\" to=\"/classify\" >\n            <button className=\"App-button\" disabled={!this.state.enableNext}>\n              Next\n            </button>\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Home extends Component {\n\n    constructor(props){\n      super(props);\n      this.imgId = 'ah3bd9-inputfile';\n      this.onChange = this.onChange.bind(this);\n    }\n\n  onChange(){\n    const file   = document.getElementById(this.imgId).files[0];\n\n    const reader = new FileReader();\n\n    const that = this;\n    reader.onloadend = function(){\n      that.props.bubble('verifyImg', reader.result);\n      that.props.bubble('uploaded', true);\n      that.props.bubble('imgBlob', file);\n      that.props.history.push('/classify');\n\n    }\n\n    if (file){\n      reader.readAsDataURL(file);\n    }\n\n  }\n\n\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"App-panel\">\n            <Link\n              className=\"App-link\"\n              to=\"/verify-url\"\n            >\n              Enter Url\n            </Link>\n          </div>\n            <p>\n              Or\n            </p>\n          <div className=\"App-panel\">\n            <div id=\"input-hider\">\n              <input type=\"file\" onChange={this.onChange} id={this.imgId} accept=\"image/*\"/>\n            </div>\n            <div className=\"App-link\" onClick={()=>document.getElementById(this.imgId).click()}>Upload file / Take photo</div>\n          </div>\n        </header>\n      </div>\n    );\n  }\n\n}\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = { \n      classifyImg: '',\n      verifyImgUrl: null,\n      verifyImg: addcircle,\n      validImg: false,\n      uploaded: false,\n      imgBlob: null,\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.bubble = this.bubble.bind(this);\n  }\n\n  bubble(name, val) {\n    console.log(\"calling set state in bubble with\", name, val);\n    this.setState(state => (state[name]=val));\n  }\n\n\n  handleError(event) {\n    this.setState(state => ({\n      verifyImg: addcircle\n    }))\n  }\n\n  handleChange(event) {\n    const val = event.target.value;\n    this.setState(state => ({\n      verifyImgUrl: val,\n      verifyImg: val,\n    }))\n  }\n  render(props) {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"app-container\">\n          <Route path=\"/\" exact render={ (props) => \n            <Home {...props} bubble={this.bubble}></Home> \n          } />\n          <Route path=\"/verify-url\" exact render={(props) => \n              <VerifyUrl \n                classifyImg={this.state.classifyImg}\n                handleChange={this.handleChange} \n                handleError={this.handleError} \n                imgSrcRaw={this.state.verifyImgUrl}\n                imgSrcClean={this.state.verifyImg}\n              />\n          }/>\n          <Route path=\"/classify\" exact render={(props) => \n              <ClassifyUrl \n                {...props}\n                classifyImg={this.state.verifyImg}\n                handleSubmit={this.handleSubmit} \n                uploaded={this.state.uploaded}\n                imgBlob={this.state.imgBlob}\n              />\n          }/>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}