{"version":3,"sources":["ClassifyUrl.js","Home.js","GitHash.js","UrlChooser.js","App.js","serviceWorker.js","index.js"],"names":["ClassifyUrl","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","overlayActive","overlaySpinnerActive","overlayText","getApiUrl","classifyImg","enableClassify","handleClick","bind","assertThisInitialized","handleClassify","toggleOverlay","doPostCallback","doGetCallback","data","animal","computer","mickey","predictions","_this2","setState","_this3","toggleSpinner","uploaded","_this4","fetch","baseUrl","method","body","imgBlob","then","res","json","obj","exampleMapping","catch","error","message","_this5","params","encodeURIComponent","axios","get","response","react_default","a","createElement","LoadingOverlay_default","active","spinner","text","onClick","className","src","alt","Link","to","Component","Home","imgId","onChange","file","document","getElementById","files","reader","FileReader","that","onloadend","bubble","result","history","push","readAsDataURL","id","type","accept","click","GitHash","UrlChooser","handleChange","event","val","target","value","VerifyUrl","imgSrc","displayImg","enableNext","handlePaste","e","v","pastedUrl","clipboardData","getData","imgSrcRaw","placeholder","onPaste","App","verifyImgUrl","validImg","handleError","name","verifyImg","BrowserRouter","basename","process","Route","path","exact","render","src_Home","assign","App_VerifyUrl","imgSrcClean","src_ClassifyUrl","handleSubmit","src_UrlChooser","Boolean","window","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5bb9e0fd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport axios from 'axios';\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass ClassifyUrl extends Component {\n  constructor(props){\n    super(props);\n    this.state = { \n      overlayActive: false,\n      overlaySpinnerActive: false,\n      overlayText:\"Waiting for model on remote server to answer...\",\n      getApiUrl: props.getApiUrl || 'https://dsm.just-minimalism.com/classify-url',\n      classifyImg: props.classifyImg,\n      enableClassify: true,\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClassify = this.handleClassify.bind(this);\n    this.toggleOverlay = this.toggleOverlay.bind(this);\n    this.doPostCallback = this.doPostCallback.bind(this);\n    this.doGetCallback = this.doGetCallback.bind(this);\n  }\n\n  exampleMapping(data){\n    const dict = {\n      animal: \"This is an animal mouse!\",\n      computer: \"This is a computer mouse!\",\n      mickey: \"This is mickey mouse\",\n    }\n    return dict[data.predictions[0][0]];\n  }\n\n  handleClick(){\n    this.toggleOverlay();\n  }\n\n  toggleOverlay(){\n    this.setState(state => ({\n        overlayActive: !this.state.overlayActive\n      })\n    );\n  }\n\n  toggleSpinner(){\n    this.setState(state => ({\n        overlaySpinnerActive: !this.state.overlaySpinnerActive\n      })\n    );\n  }\n\n  handleClassify(){\n    this.toggleOverlay();\n    this.toggleSpinner();\n    this.setState({ overlayText: 'Classifying image'});\n\n    if(this.props.uploaded){\n      this.doPostCallback();\n    } else {\n      this.doGetCallback();\n    }\n\t}\n\n \tdoPostCallback(){\n    //const base = 'https://dsm.just-minimalism.com/classify-url';\n    //const base = 'http://138.197.227.42/classify-url';\n      fetch(this.props.baseUrl + '/classify-url', {\n\t\t\t  method: \"POST\",\n\t\t\t  body: this.props.imgBlob\n\t\t\t}).then(res => {\n\t\t\t\treturn res.json().then(obj=> {\n          this.setState({ \n            overlayText: this.exampleMapping(obj),\n            enableClassify: false,\n            overlayActive: true\n          });\n          this.toggleSpinner();\n\t\t\t\t})\n      }).catch(error => {\n          this.setState({ \n            overlayText: error.message,\n            enableClassify: true\n          });\n          this.toggleSpinner();\n      });\n\t\t}\n  \n\n  doGetCallback(){\n    const base = 'https://dsm.just-minimalism.com/classify-url';\n    //const base = 'http://138.197.227.42/classify-url';\n    const params = '?url=' + encodeURIComponent(this.state.classifyImg);\n    axios.get(base + params)\n      .then((response) => {\n          this.setState({ \n            overlayText: this.exampleMapping(response.data),\n            enableClassify: false\n          });\n          this.toggleSpinner();\n        }\n      )\n  }\n\n  render() {\n    return (\n      <LoadingOverlay\n        active={this.state.overlayActive}\n        spinner={this.state.overlaySpinnerActive}\n        text={this.state.overlayText}\n        onClick={this.handleClick}\n      >\n        <div className=\"App-header\">\n          <div className=\"App-page\">\n            <div className=\"App-panel\">\n              <img src={this.props.classifyImg} className=\"App-preview-img\" alt=\"\"/>\n              <Link className=\"App-link-button\" to=\"/classify\" onClick={this.handleClassify} >\n                  Classify\n              </Link>\n            </div>\n          </div>\n        </div>\n        <Link to=\"/\" className=\"App-back-link\">Back</Link>\n      </LoadingOverlay>\n    )\n  }\n}\n\nexport default ClassifyUrl\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass Home extends Component {\n\n    constructor(props){\n      super(props);\n\n      this.state = {\n        overlayActive: false,\n        overlaySpinnerActive: false,\n        overlayText:\"\",\n      }\n\n      this.imgId = 'ah3bd9-inputfile';\n      this.onChange = this.onChange.bind(this);\n    }\n\n  onChange(){\n    this.setState({\n        overlayActive: true,\n        overlaySpinnerActive: true,\n        overlayText:\"Accessing Image...\",\n    })\n\n    const file   = document.getElementById(this.imgId).files[0];\n    const reader = new FileReader();\n\n    const that = this;\n    reader.onloadend = function(){\n      that.props.bubble('verifyImg', reader.result);\n      that.props.bubble('uploaded', true);\n      that.props.bubble('imgBlob', file);\n      that.props.history.push('/classify');\n      that.setState({\n          overlayActive: false,\n      })\n\n    }\n\n    if (file){\n      reader.readAsDataURL(file);\n      this.setState({\n          overlayActive: true,\n          overlaySpinnerActive: true,\n          overlayText:\"Accessing Image...\",\n      })\n    }\n\n  }\n\n\n\n  render(){\n    return (\n      <LoadingOverlay\n        active={this.state.overlayActive}\n        spinner={this.state.overlaySpinnerActive}\n        text={this.state.overlayText}\n        onClick={this.handleClick}\n      >\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div className=\"App-panel\">\n              <Link\n                className=\"App-link\"\n                to=\"/verify-url\"\n              >\n                Enter Url\n              </Link>\n            </div>\n              <p>\n                Or\n              </p>\n            <div className=\"App-panel\">\n              <div id=\"input-hider\">\n                <input type=\"file\" onChange={this.onChange} id={this.imgId} accept=\"image/*\"/>\n              </div>\n              <div className=\"App-link\" onClick={()=>document.getElementById(this.imgId).click()}>Upload file / Take photo {this.state.overlayText}</div>\n            </div>\n          </header>\n        </div>\n      </LoadingOverlay>\n    );\n  }\n\n}\n\nexport default Home\n","import React from 'react';\nexport default function(){\n  return(\n          <div id=\"app-info\">\n            <p>f6435832ef758807e339455db3998334dacddbd3</p>\n            <p>    add base chooser</p>\n          </div>\n  )\n}\n\n","import React, { Component } from 'react';\n\nclass UrlChooser extends Component{\n\n  constructor(props){\n    super(props)\n    this.state = {\n      baseUrl:''\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const val = event.target.value;\n    this.props.bubble(\"baseUrl\", val);\n  }\n\n  render(){\n    return(\n            <div id=\"app-info\">\n              <select id=\"App-backends-select\" onChange={this.handleChange} value={this.props.baseUrl}>\n                <option value=\"https://dsm.just-minimalism.com\">https://dsm.just-minimalism.com/</option>\n                <option value=\"http://138.197.227.42\">http://138.197.227.42/</option>\n              </select>\n            </div>\n    )\n  }\n}\n\nexport default UrlChooser\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport './App.css';\n\n\n\n\nimport { name as app_name } from '../package.json';\n\nimport ClassifyUrl from './ClassifyUrl'\nimport Home from './Home'\n\nimport GitHash from './GitHash'\nimport UrlChooser from './UrlChooser'\n\nclass VerifyUrl extends Component {\n  constructor(props){\n    super(props);\n    this.state = { \n      imgSrc : '',\n      displayImg: false,\n      enableNext: false\n    }\n\n      this.handlePaste = this.handlePaste.bind(this);\n  }\n\n  handlePaste(e,v){\n    const pastedUrl = e.clipboardData.getData('Text');\n    this.props.bubble('verifyImg', pastedUrl);\n    this.props.history.push('/classify');\n  }\n\n  //<img src={this.props.imgSrcClean} className=\"App-preview-img\"  onError={this.props.handleError} onLoad={()=> this.setState({enableNext:true})} alt=\"\"/> \n  render() {\n    return (\n      <div className=\"App-header\">\n        <div className=\"App-page\">\n          <input type=\"text\" value={this.props.imgSrcRaw} className=\"App-text-input\" onChange={this.props.handleChange} placeholder=\"Paste a URL\" onPaste={this.handlePaste}/>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = { \n      classifyImg: '',\n      verifyImgUrl: null,\n      validImg: false,\n      uploaded: false,\n      imgBlob: null,\n      baseUrl:'https://dsm.just-minimalism.com'\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.bubble = this.bubble.bind(this);\n  }\n\n  bubble(name, val) {\n    this.setState(state => (state[name]=val));\n  }\n\n\n  handleError(event) {\n    this.setState(state => ({\n    }))\n  }\n\n  handleChange(event) {\n    const val = event.target.value;\n    this.setState(state => ({\n      verifyImgUrl: val,\n      verifyImg: val,\n    }))\n  }\n  render(props) {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"app-container\">\n          <Route path=\"/\" exact render={ (props) => \n            <Home {...props} bubble={this.bubble}></Home> \n          } />\n          <Route path=\"/verify-url\" exact render={(props) => \n              <VerifyUrl \n                {...props}\n                classifyImg={this.state.classifyImg}\n                handleChange={this.handleChange} \n                handleError={this.handleError} \n                imgSrcRaw={this.state.verifyImgUrl}\n                imgSrcClean={this.state.verifyImg}\n                bubble={this.bubble}\n              />\n          }/>\n          <Route path=\"/classify\" exact render={(props) => \n              <ClassifyUrl \n                {...props}\n                classifyImg={this.state.verifyImg}\n                handleSubmit={this.handleSubmit} \n                uploaded={this.state.uploaded}\n                imgBlob={this.state.imgBlob}\n                baseUrl={this.state.baseUrl}\n              />\n          }/>\n          <GitHash/>\n          <UrlChooser\n            bubble={this.bubble}\n            baseUrl={this.state.baseUrl}\n          />\n          />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}